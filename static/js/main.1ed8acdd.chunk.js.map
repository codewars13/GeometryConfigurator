{"version":3,"sources":["helper/constants.js","components/Box/Box.js","components/UI/CtrlDesc.js","components/Box/CtrlBox.js","components/Sphere/Sphere.js","components/Sphere/CtrlSphere.js","components/Cylinder/Cylinder.js","components/UI/CtrlCheckBoxDesc.js","components/Cylinder/CtrlCylinder.js","components/Cone/Cone.js","components/Cone/CtrlCone.js","components/CanvasWrapper.js","App.js","index.js"],"names":["ROTATION_SPEED","GRID_COLOR","GEOMETRY_COLOR","Box","props","ref","useRef","useFrame","current","rotation","x","y","c","args","xSize","ySize","color","CtrlDesc","className","children","Tooltip","title","helper","placement","arrow","IconButton","fontSize","CtrlBox","Slider","onChange","event","onChangeWidth","target","value","defaultWidthValue","step","marks","min","max","valueLabelDisplay","onChangeHeight","defaultHeightValue","defaultColor","onChangeColor","prefixed","alpha","Sphere","attach","radius","widthSegments","heightSegments","CtrlSphere","onChangeSize","defaultValue","onChangeWidthSegments","defaultWidthSegmentsValue","onChangeHeightSegments","defaultHeightSegmnetsValue","Cylinder","radiusTop","radiusBottom","height","openEnded","CtrlCheckBoxDesc","FormGroup","FormControlLabel","control","Checkbox","checked","ifChecked","label","CtrlCylinder","onChangeRadiusTop","onChangeRadiusBottom","onChangeOpenEnded","Cone","thetaStart","thetaLength","Math","PI","CtrlCone","onChangeRadius","onChangeThetaStart","onChangeThetaLength","CanvasWrapper","camera","position","shadows","OrbitControls","enablePan","enableZoom","intensity","castShadow","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","geometry","App","page","controls","useState","shape","setShape","setXSize","setYSize","boxColor","setBoxColor","setRadius","setWidthSegments","setHeightSegments","sphereColor","setSphereColor","cylinderRadiusTop","setCylinderRadiusTop","cylinderRadiusBottom","setCylinderRadiusBottom","cylinderHeight","setCylinderHeight","cylinderOpenEnded","setCylinderOpenEnded","coneRadius","setConeRadius","coneHeight","setConeHeight","coneThetaStart","setConeThetaStart","coneThetaLength","setConeThetaLength","coneOpenEnded","setConeOpenEnded","id","Autocomplete","disablePortal","options","renderInput","params","TextField","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ed8acdd.chunk.js","sourcesContent":["//Rotation speed\nexport const ROTATION_SPEED = 0.002;\n\n//Colors\nexport const CANVAS_BG = \"#041830\";\nexport const GRID_COLOR = \"#021020\";\nexport const GEOMETRY_COLOR = \"#ff45a0\";\n","import { useFrame } from '@react-three/fiber';\nimport { useRef } from 'react';\nimport * as c from '../../helper/constants';\n\nexport default function Box(props) {\n    const ref = useRef()\n    useFrame(() => {\n        ref.current.rotation.x = ref.current.rotation.y += c.ROTATION_SPEED\n    })\n    return (\n        <mesh\n        {...props}\n        ref={ref}>\n        <boxGeometry args={[props.xSize, props.ySize, 1]} />\n        <meshStandardMaterial color={props.color} />\n        </mesh>\n    )\n}\n\n","import Tooltip from '@mui/material/Tooltip';\nimport HelpIcon from '@mui/icons-material/HelpOutline';\nimport IconButton from '@mui/material/IconButton';\n\nexport default function CtrlDesc(props) {\n    return(\n        <div className=\"field-name\">\n        {props.children}\n        <Tooltip title={props.helper} placement=\"top\" arrow>\n            <IconButton>  \n                <HelpIcon fontSize={'small'} />\n            </IconButton>\n        </Tooltip>\n    </div>\n    );\n}","import Slider from '@mui/material/Slider';\nimport CtrlDesc from '../UI/CtrlDesc';\nimport { HexColorPicker, HexColorInput } from \"react-colorful\";\n\nexport default function CtrlBox(props) {\n\n    function handleWidthChange(event) {\n        props.onChangeWidth(event.target.value);\n    }\n    function handleHeightChange(event) {\n        props.onChangeHeight(event.target.value);\n    }\n    \n    return(\n        <div className=\"controls\">\n            <h4 className=\"controls-title\">Cube configuration</h4>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Width; that is, the length of the edges parallel to the X axis.\">Width</CtrlDesc>\n                <Slider \n                    onChange={handleWidthChange} \n                    value={props.defaultWidthValue} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={2} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Height; that is, the length of the edges parallel to the Y axis.\">Height</CtrlDesc>\n                <Slider \n                    onChange={handleHeightChange} \n                    value={props.defaultHeightValue} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={2} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Change geometry color\">Change color</CtrlDesc>\n                <div className=\"colorpicker\">\n                    <HexColorPicker color={props.defaultColor} onChange={props.onChangeColor} />\n                    <HexColorInput  color={props.defaultColor} onChange={props.onChangeColor} prefixed alpha />\n                </div>\n            </div>\n        </div>\n    );\n}","import { useFrame } from '@react-three/fiber';\nimport { useRef } from 'react'\nimport * as c from '../../helper/constants';\n\nexport default function Sphere(props) {\n    const ref = useRef()\n    useFrame(() => {\n      ref.current.rotation.x = ref.current.rotation.y += c.ROTATION_SPEED\n    })\n    return (\n        <mesh\n        {...props}\n        ref={ref}>\n        <sphereGeometry attach=\"geometry\" args={[props.radius, props.widthSegments, props.heightSegments]} /> \n        <meshStandardMaterial attach=\"material\" color={props.color} />\n      </mesh>\n    );\n}","import Slider from '@mui/material/Slider';\nimport CtrlDesc from '../UI/CtrlDesc';\nimport { HexColorPicker, HexColorInput } from \"react-colorful\";\n\nexport default function CtrlSphere(props) {\n\n    function handleSizeChange(event) {\n        props.onChangeSize(event.target.value);\n    }\n\n    function handleWidthSegments(event) {\n        props.onChangeWidthSegments(event.target.value);\n    }\n\n    function handleHeightSegments(event) {\n        props.onChangeHeightSegments(event.target.value);\n    }\n    \n    return(\n        <div className=\"controls\">\n            <h4 className=\"controls-title\">Sphere configuration</h4>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Sphere radius\">Radius</CtrlDesc>\n                <Slider \n                    onChange={handleSizeChange} \n                    value={props.defaultValue} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={1} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Number of horizontal segments. Minimum value is 3, and the default is 32.\">Width segments</CtrlDesc>\n                <Slider \n                    onChange={handleWidthSegments} \n                    value={props.defaultWidthSegmentsValue} \n                    step={1} \n                    marks \n                    min={3} \n                    max={32} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Number of vertical segments. Minimum value is 2, and the default is 16.\">Height segments</CtrlDesc>\n                <Slider \n                    onChange={handleHeightSegments} \n                    value={props.defaultHeightSegmnetsValue} \n                    step={1} \n                    marks \n                    min={2} \n                    max={32} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Change geometry color\">Change color</CtrlDesc>\n                <div className=\"resposive colorpicker\">\n                    <HexColorPicker color={props.defaultColor} onChange={props.onChangeColor} />\n                    <HexColorInput  color={props.defaultColor} onChange={props.onChangeColor} prefixed alpha />\n                </div>\n            </div>\n        </div>\n    );\n}","import { useFrame } from '@react-three/fiber';\nimport { useRef } from 'react';\nimport * as c from '../../helper/constants';\n\nexport default function Cylinder(props) {\n    const ref = useRef()\n    useFrame(() => {\n        ref.current.rotation.x = ref.current.rotation.y += c.ROTATION_SPEED\n    })\n\n    return (\n        <mesh\n        {...props}\n        ref={ref}>\n        <cylinderBufferGeometry attach=\"geometry\" args={[props.radiusTop, props.radiusBottom, props.height, 32, 1, props.openEnded]} />\n        <meshNormalMaterial attach=\"material\" />\n        </mesh>\n    )\n}","import Tooltip from '@mui/material/Tooltip';\nimport HelpIcon from '@mui/icons-material/HelpOutline';\nimport IconButton from '@mui/material/IconButton';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function CtrlCheckBoxDesc(props) {\n    return(\n        <div className=\"checkbox-name\">\n            <FormGroup>\n                <FormControlLabel control={<Checkbox onChange={props.onChange} checked={props.ifChecked} />} label={props.label} />\n            </FormGroup>\n            <Tooltip title={props.helper} placement=\"top\" arrow>\n                <IconButton>  \n                    <HelpIcon fontSize={'small'} />\n                </IconButton>\n            </Tooltip>\n        </div>\n    );\n}","import Slider from '@mui/material/Slider';\nimport CtrlDesc from '../UI/CtrlDesc';\nimport CtrlCheckBoxDesc from '../UI/CtrlCheckBoxDesc';\n\nexport default function CtrlCylinder(props) {\n\n    function handleRadiusTopChange(event) {\n        props.onChangeRadiusTop(event.target.value);\n    }\n    function handleRadiusBottomChange(event) {\n        props.onChangeRadiusBottom(event.target.value);\n    }\n    function handleHeightChange(event) {\n        props.onChangeHeight(event.target.value);\n    }\n    function handleOpenEnded(event) {\n        props.onChangeOpenEnded(event.target.checked);\n    }\n\n    return(\n        <div className=\"controls\">\n            <h4 className=\"controls-title\">Cylinder configuration</h4>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Radius of the cylinder at the top\">Radius top</CtrlDesc>\n                <Slider \n                    onChange={handleRadiusTopChange} \n                    value={props.radiusTop} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={1.5} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Radius of the cylinder at the bottom\">Radius bottom</CtrlDesc>\n                <Slider \n                    onChange={handleRadiusBottomChange} \n                    value={props.radiusBottom} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={1.5} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Height of the cylinder\">Height</CtrlDesc>\n                <Slider \n                    onChange={handleHeightChange} \n                    value={props.height} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={2} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlCheckBoxDesc \n                    label=\"Open ended\" \n                    helper=\"Indication whether the ends of the cylinder are open or capped\"\n                    onChange={handleOpenEnded}\n                    ifChecked={props.openEnded}\n                />\n            </div>\n        </div>\n    );\n}","import { useFrame } from '@react-three/fiber';\nimport { useRef } from 'react';\nimport * as c from '../../helper/constants';\n\nexport default function Cone(props) {\n    const ref = useRef()\n    useFrame(() => {\n        ref.current.rotation.x = ref.current.rotation.y += c.ROTATION_SPEED\n    })\n    return (\n        <mesh\n        {...props}\n        ref={ref}>\n        <coneGeometry args={[props.radius, props.height, 32, 1, props.openEnded, props.thetaStart, props.thetaLength * Math.PI]} />\n        <meshNormalMaterial attach=\"material\" />\n        </mesh>\n    )\n}","import Slider from '@mui/material/Slider';\nimport CtrlDesc from '../UI/CtrlDesc';\nimport CtrlCheckBoxDesc from '../UI/CtrlCheckBoxDesc';\n\nexport default function CtrlCone(props) {\n\n    function handleRadiusChange(event) {\n        props.onChangeRadius(event.target.value);\n    }\n    function handleHeightChange(event) {\n        props.onChangeHeight(event.target.value);\n    }\n    function handleThetaStartChange(event) {\n        props.onChangeThetaStart(event.target.value);\n    }\n    function handleThetaLengthChange(event) {\n        props.onChangeThetaLength(event.target.value);\n    }\n    function handleOpenEnded(event) {\n        props.onChangeOpenEnded(event.target.checked);\n    }\n\n    return(\n        <div className=\"controls\">\n            <h4 className=\"controls-title\">Cone configuration</h4>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Radius of the cone base\">Radius</CtrlDesc>\n                <Slider \n                    onChange={handleRadiusChange} \n                    value={props.radius} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={1.5} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Height of the cone\">Height</CtrlDesc>\n                <Slider \n                    onChange={handleHeightChange} \n                    value={props.height} \n                    step={0.1} \n                    marks \n                    min={0.5} \n                    max={2} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"Start angle for first segment, default = 0\">Theta start</CtrlDesc>\n                <Slider \n                    onChange={handleThetaStartChange} \n                    value={props.thetaStart} \n                    step={0.1} \n                    marks \n                    min={0} \n                    max={2} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlDesc helper=\"The central angle, often called theta, of the circular sector.\">Theta length</CtrlDesc>\n                <Slider \n                    onChange={handleThetaLengthChange} \n                    value={props.thetaLength} \n                    step={0.1} \n                    marks \n                    min={0.1} \n                    max={2} \n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n            <div className=\"controls-row\">\n                <CtrlCheckBoxDesc \n                    label=\"Open ended\" \n                    helper=\"Indication whether the ends of the cone is open or capped\"\n                    onChange={handleOpenEnded}\n                    ifChecked={props.openEnded}\n                />\n            </div>\n        </div>\n    );\n}","import { Canvas } from '@react-three/fiber';\nimport { OrbitControls} from \"@react-three/drei\";\n\nexport default function CanvasWrapper(props) {\n    return(\n    <Canvas camera={{ position: [2, 2, 2] }} shadows>\n      <OrbitControls enablePan={false} enableZoom={false} />\n      <ambientLight intensity={0.3} />\n        <directionalLight\n          castShadow\n          position={[0, 10, 0]}\n          intensity={0.5}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-far={50}\n          shadow-camera-left={-10}\n          shadow-camera-right={10}\n          shadow-camera-top={10}\n          shadow-camera-bottom={-10}\n        />\n        <pointLight position={[-10, 0, -20]} intensity={1.5} />\n        <pointLight position={[0, -10, 0]} intensity={1.5} />\n      { props.children }\n    </Canvas>\n    );\n}","import React from 'react'\nimport { useState } from 'react';\nimport Box from './components/Box/Box';\nimport CtrlBox from './components/Box/CtrlBox'\nimport Sphere from './components/Sphere/Sphere';\nimport CtrlSphere from './components/Sphere/CtrlSphere'\nimport Cylinder from './components/Cylinder/Cylinder';\nimport CtrlCylinder from './components/Cylinder/CtrlCylinder';\nimport Cone from './components/Cone/Cone';\nimport CtrlCone from './components/Cone/CtrlCone';\nimport CanvasWrapper from './components/CanvasWrapper';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport ThreeDRotationIcon from '@mui/icons-material/ThreeDRotation';\nimport * as c from './helper/constants';\n\nconst geometry = ['Cube','Sphere','Cylinder','Cone']; \n\nexport default function App() {\n  let page = null;\n  let controls = null;\n  const [shape, setShape] = useState(\"\");\n\n  //Handle Box/cube state\n  const [xSize, setXSize] = useState(1);\n  const [ySize, setYSize] = useState(1);\n  const [boxColor, setBoxColor] = useState(c.GEOMETRY_COLOR);\n  function handleWidthChange(value) {\n    setXSize(value);\n  }\n  function handleHeightChange(value) {\n    setYSize(value);\n  }\n\n  //Handle Sphere state\n  const [radius, setRadius] = useState(0.5);\n  const [widthSegments, setWidthSegments] = useState(32);\n  const [heightSegments, setHeightSegments] = useState(16);\n  const [sphereColor, setSphereColor] = useState(c.GEOMETRY_COLOR);\n  function handleRadiusChange(value) {\n    setRadius(value);\n  }\n  function handleWidthSegmentsChange(value) {\n    setWidthSegments(value);\n  }\n  function handleHeightSegmentsChange(value) {\n    setHeightSegments(value);\n  }\n\n  //Handle Cylinder state\n  const [cylinderRadiusTop, setCylinderRadiusTop] = useState(0.5);\n  const [cylinderRadiusBottom, setCylinderRadiusBottom] = useState(0.5);\n  const [cylinderHeight, setCylinderHeight] = useState(1.5);\n  const [cylinderOpenEnded, setCylinderOpenEnded] = useState(false);\n  function handleCylinderRadiusTopChange(value) {\n    setCylinderRadiusTop(value);\n  }\n  function handleCylinderRadiusBottomChange(value) {\n    setCylinderRadiusBottom(value);\n  }\n  function handleCylinderHeightChange(value) {\n    setCylinderHeight(value);\n  }\n  function handleCylinderOpenEndedChange(value) {\n    setCylinderOpenEnded(value);\n  }\n\n  //Handle Cone state\n  const [coneRadius, setConeRadius] = useState(0.5);\n  const [coneHeight, setConeHeight] = useState(1);\n  const [coneThetaStart, setConeThetaStart] = useState(0);\n  const [coneThetaLength, setConeThetaLength] = useState(2);\n  const [coneOpenEnded, setConeOpenEnded] = useState(false);\n\n  function handleConeRadiusChange(value) {\n    setConeRadius(value);\n  }\n  function handleConeHeightChange(value) {\n    setConeHeight(value);\n  }\n  function handleConeThetaStartChange(value) {\n    setConeThetaStart(value);\n  }\n  function handleConeThetaLengthChange(value) {\n    setConeThetaLength(value);\n  }\n  function handleConeOpenEndedChange(value) {\n    setConeOpenEnded(value);\n  }\n\n  //Handle opened \n  switch(shape) {\n    case geometry[0]:\n      page = <Box xSize={xSize} ySize={ySize} color={boxColor} />\n      controls = \n      <CtrlBox \n        defaultWidthValue={xSize} \n        defaultHeightValue={ySize}\n        defaultColor={boxColor} \n        onChangeWidth={handleWidthChange} \n        onChangeHeight={handleHeightChange}\n        onChangeColor={setBoxColor} \n      />;\n      break;\n    case geometry[1]:\n      page = \n      <Sphere \n        radius={radius} \n        widthSegments={widthSegments} \n        heightSegments={heightSegments}\n        color={sphereColor} \n      />\n      controls = \n      <CtrlSphere \n        defaultValue={radius} \n        defaultColor={sphereColor} \n        defaultWidthSegmentsValue={widthSegments}\n        defaultHeightSegmnetsValue={heightSegments}\n        onChangeSize={handleRadiusChange} \n        onChangeColor={setSphereColor} \n        onChangeWidthSegments={handleWidthSegmentsChange}\n        onChangeHeightSegments={handleHeightSegmentsChange}\n      />;\n      break;\n    case geometry[2]:\n      page =  \n      <Cylinder \n        radiusTop={cylinderRadiusTop}\n        radiusBottom={cylinderRadiusBottom}\n        height={cylinderHeight}\n        openEnded={cylinderOpenEnded}\n      />\n      controls = \n      <CtrlCylinder \n        radiusTop={cylinderRadiusTop}\n        radiusBottom={cylinderRadiusBottom}\n        height={cylinderHeight}\n        openEnded={cylinderOpenEnded}\n        onChangeRadiusTop={handleCylinderRadiusTopChange}\n        onChangeRadiusBottom={handleCylinderRadiusBottomChange}\n        onChangeHeight={handleCylinderHeightChange}\n        onChangeOpenEnded={handleCylinderOpenEndedChange}\n      />\n      break;\n    case geometry[3]:\n      page = \n      <Cone \n        radius={coneRadius}\n        height={coneHeight}\n        thetaStart={coneThetaStart}\n        thetaLength={coneThetaLength}\n        openEnded={coneOpenEnded}\n      />\n      controls =\n      <CtrlCone \n        radius={coneRadius}\n        height={coneHeight}\n        thetaStart={coneThetaStart}\n        thetaLength={coneThetaLength}\n        openEnded={coneOpenEnded}\n        onChangeRadius = {handleConeRadiusChange}\n        onChangeHeight = {handleConeHeightChange}\n        onChangeThetaStart = {handleConeThetaStartChange}\n        onChangeThetaLength = {handleConeThetaLengthChange}\n        onChangeOpenEnded = {handleConeOpenEndedChange}\n      />\n      break;\n    default:\n      page = \"\";\n  }\n\n  return ( \n    <div className=\"app\" id=\"root\">\n      <div className=\"toolbar\">\n        <div className=\"picker\">\n          <h1>Geometry picker</h1>\n          <p>Select desired geometry to change it's configuration</p>\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={geometry}\n            onChange={(event, value) => setShape(value)}\n            renderInput={(params) => <TextField {...params} label=\"Geometry\" />}\n          />\n        </div>\n        {controls}\n      </div>\n      <div className=\"helper\">\n        <ThreeDRotationIcon />\n        <span>Use mouse to rotate the camera</span>\n      </div>\n      <CanvasWrapper>\n        { page }\n        <gridHelper position={[0, -2, 0]} args={[10, 10, c.GRID_COLOR, c.GRID_COLOR ]} />\n      </CanvasWrapper>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}